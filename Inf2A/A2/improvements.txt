Our system does not check for the proper use of "a" and "an", thus allowing both "a duck" and "an duck".(This would be a feature of a context-sensitive language) One way to solve this would be to add an extra step in the type checking and describe this additional rule: we could use parameterized types and for every verb get whether it starts with a vowel or not(as a basic rule, not including exceptions), similarly to how we checked for number agreement. Alternatively, we can just learn the determiner given as a statement and check if the same one is used in the question.
Also, system should still return an answer even though the question in ambiguous. One approach is to use probabilities to resolve ambiguity and return the most likely answer(if there is one)
What is more, our grammar for statements does not store more than a property at a time (so we have to write both "John is a duck" and "John is purple", whereas we can ask "Who is a purple duck?"), but this would just mean extending the grammar and storing more than one relationship at a time.